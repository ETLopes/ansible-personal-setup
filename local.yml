- name: Environment Setup
  hosts: all
  become: true
  tasks:
    - name: Update and upgrade apt packages (Debian-based)
      ansible.builtin.apt:
        update_cache: true
        upgrade: dist
      when: ansible_facts['os_family'] == "Debian"
      tags:
        - rn

    - name: Update and upgrade brew packages (macOS)
      community.general.homebrew:
        update_homebrew: true
        upgrade_all: true
      when: ansible_facts['os_family'] == "Darwin"
      become: false
      tags:
        - rn

    - name: Install Node.js (Debian-based)
      ansible.builtin.apt:
        name: nodejs
        state: present
      when: ansible_facts['os_family'] == "Debian"
      tags:
        - rn

    - name: Install Node.js (macOS)
      community.general.homebrew:
        name: node
        state: present
      when: ansible_facts['os_family'] == "Darwin"
      become: false
      tags:
        - rn

    - name: Install npm (Debian-based)
      ansible.builtin.apt:
        name: npm
        state: present
      when: ansible_facts['os_family'] == "Debian"
      tags:
        - rn

    - name: Install yarn
      ansible.builtin.command: npm install --global yarn
      args:
        creates: /Users/eduardolopes/.nvm/versions/node/v20.12.2/bin/yarn
      tags:
        - rn

    - name: Install Watchman (Debian-based)
      ansible.builtin.apt:
        name: watchman
        state: present
      when: ansible_facts['os_family'] == "Debian"
      tags:
        - rn

    - name: Install Watchman (macOS)
      community.general.homebrew:
        name: watchman
        state: present
      when: ansible_facts['os_family'] == "Darwin"
      become: false
      tags:
        - rn

    - name: Install Java Development Kit (JDK) (Debian-based)
      ansible.builtin.apt:
        name: openjdk-8-jdk
        state: present
      when: ansible_facts['os_family'] == "Debian"
      tags:
        - rn

    - name: Install Java Development Kit (JDK) (macOS)
      community.general.homebrew:
        name: openjdk
        state: present
      when: ansible_facts['os_family'] == "Darwin"
      become: false
      tags:
        - rn

    - name: Install Android Studio dependencies (Debian-based)
      ansible.builtin.apt:
        name: "{{ item }}"
        state: present
      loop:
        - libc6:i386
        - libncurses5:i386
        - libstdc++6:i386
        - lib32z1
        - libbz2-1.0:i386
      when: ansible_facts['os_family'] == "Debian"
      tags:
        - rn

    - name: Install Gnu-tar (macOS)
      community.general.homebrew:
        name: gnu-tar
        state: present
      when: ansible_facts['os_family'] == "Darwin"
      become: false
      tags:
        - rn

    - name: Download Android Studio
      ansible.builtin.get_url:
        url: https://redirector.gvt1.com/edgedl/android/studio/install/2024.1.1.12/android-studio-2024.1.1.12-mac_arm.dmg
        dest: /tmp/android-studio.dmg
        mode: '0644'
      when: ansible_facts['os_family'] == "Darwin"
      tags:
        - rn

    - name: Mount the DMG file
      ansible.builtin.command: hdiutil attach /tmp/android-studio.dmg
      args:
        creates: /Volumes/Android\ Studio
      when: ansible_facts['os_family'] == "Darwin"
      tags:
        - rn

    - name: Wait for DMG to mount
      ansible.builtin.wait_for:
        path: /Volumes/Android\ Studio/Android\ Studio.app
        state: present
        timeout: 30
      when: ansible_facts['os_family'] == "Darwin"
      tags:
        - rn

    - name: Copy Android Studio to Applications
      ansible.builtin.command: cp -R /Volumes/Android\ Studio/Android\ Studio.app /Applications/
      args:
        creates: /Applications/Android\ Studio.app
      when: ansible_facts['os_family'] == "Darwin"
      tags:
        - rn

    - name: Unmount the DMG file
      ansible.builtin.command: hdiutil detach /Volumes/Android\ Studio
      args:
        removes: /Volumes/Android\ Studio
      when: ansible_facts['os_family'] == "Darwin"
      tags:
        - rn

    - name: Set up Android Studio environment variables
      ansible.builtin.lineinfile:
        path: /etc/profile
        line: 'export ANDROID_HOME=/opt/android-studio'
        state: present
      tags:
        - rn

    - name: Install React Native CLI
      community.general.npm:
        name: react-native-cli
        global: true
      tags:
        - rn
